spring:
  application:
    name: OAuth2-tutorial

  config:
    import: classpath:application-oauth.yml

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/jwt_tutorial # ?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    username: root
    password:

  jpa:
    hibernate:
      ddl-auto: update
    naming:
      physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${spring.security.oauth2.client.registration.naver.client-id}
            client-secret: ${spring.security.oauth2.client.registration.naver.client-secret}
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - gender
              - years

          google:
            client-name: google
            client-id: ${spring.security.oauth2.client.registration.google.client-id}
            client-secret: ${spring.security.oauth2.client.registration.google.client-secret}
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  jwt:
    secret: tneorjsrnofsltuesobftiebswobpterkesb