spring:
  application:
    name: OAuth2-tutorial
<<<<<<< HEAD
  config:
    import: classpath:application-oauth.yml
=======

>>>>>>> e47ac80 (feat: naver OAuth2 서비스 properties 등록)
  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
<<<<<<< HEAD
            client-id: ${spring.security.oauth2.client.registration.naver.client-id}
            client-secret: ${spring.security.oauth2.client.registration.naver.client-secret}
=======
            client-id: QuuqPF6lTLzEszswjnJu
            client-secret: MSeujeemPl
>>>>>>> e47ac80 (feat: naver OAuth2 서비스 properties 등록)
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - gender
              - years
<<<<<<< HEAD
          google:
            client-name: google
            client-id: ${spring.security.oauth2.client.registration.google.client-id}
            client-secret: ${spring.security.oauth2.client.registration.google.client-secret}
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email
=======
>>>>>>> e47ac80 (feat: naver OAuth2 서비스 properties 등록)
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
<<<<<<< HEAD
  e47ac80c841d395d02a2016eb825bc4ecdec8dcf
  96b0cd4dac0e4212619b33858b97f3e9f49389f8
=======


>>>>>>> e47ac80 (feat: naver OAuth2 서비스 properties 등록)
